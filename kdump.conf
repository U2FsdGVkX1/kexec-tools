# Configures where to put the kdump /proc/vmcore files
#
# This file contains a series of commands to perform (in order) when a
# kernel crash has happened and the kdump kernel has been loaded.  Directives in
# this file are only applicable to the kdump initramfs, and have no effect if
# the root filesystem is mounted and the normal init scripts are processed
#
# Currently only one dump target and path may be configured at once
# if the configured dump target fails, the default action will be preformed
# the default action may be configured with the default directive below.  If the
# configured dump target succedes 
#
# Basics commands supported are:
# raw <partition>	- Will dd /proc/vmcore into <partition>.
#
# net <nfs mount>	- Will mount fs and copy /proc/vmcore to
#			  <mnt>/var/crash/%HOST-%DATE/, supports DNS.
#
# net <user@server>	- Will scp /proc/vmcore to
#			  <user@server>:/var/crash/%HOST-%DATE/, supports DNS
#			  NOTE: make sure user has necessary write
#			  permissions on server
#
# sshkey <path>		- Will use the sshkey to do ssh dump
#			  Specifies the path of the ssh key you want to use
#			  when do ssh dump, the default value is
#			  /root/.ssh/kdump_id_rsa.
#
# <fs type> <partition> - Will mount -t <fs type> <partition> /mnt and copy
#		 	  /proc/vmcore to /mnt/var/crash/%DATE/.
#			  NOTE: <partition> can be a device node, label or uuid.
#
# path <path> 		- Append path to the filesystem device which you are
#			  dumping to.  Ignored for raw device dumps.
#		 	  If unset, will default to /var/crash.
#
# core_collector makedumpfile <options>
#			- This directive allows you to use the dump filtering
#			  program makedumpfile to retrieve your core, which on
#			  some arches can drastically reduce core file size.
#			  See /sbin/makedumpfile --help for a list of options.
#			  Note that the -i and -g options are not needed here,
#			  as the initrd will automatically be populated with
#			  a config file appropriate for the running kernel.
#
# extra_bins <binaries | shell scripts>
# 			- This directive allows you to specify additional
# 			  binaries or shell scripts you'd like to include in
# 			  your kdump initrd.
#
# extra_modules <module(s)>
# 			- This directive allows you to specify extra kernel
# 			  modules that you want to be loaded in the kdump
# 			  initrd, typically used to set up access to
# 			  non-boot-path dump targets that might otherwise
# 			  not be accessible in the kdump environment. Multiple
# 			  modules can be listed, separated by a space, and any
# 			  dependent modules will automatically be included.
#
# default <reboot | halt | poweroff | shell>
#			- Action to preform in case dumping to intended target
#			  fails. If no default action is specified saving vmcore
#			  to root fs is assumed default.
#			  reboot: If the default action is reboot simply reboot
#				  the system and loose the core that you are
#				  trying to retrieve.
#			  halt:   If the default action is halt, then simply
#				  halt the system after attempting to capture
#				  a vmcore, regardless of success or failure.
#			  poweroff: The system will be powered down
#			  shell:  If the default action is shell, then drop to
#				  an shell session inside the initramfs from
#				  where you can try to record the core manually.
#				  Exiting this shell reboots the system.
#				  Note: kdump uses bash as the default shell.

#raw /dev/sda5
#ext4 /dev/sda3
#ext4 LABEL=/boot
#ext4 UUID=03138356-5e61-4ab3-b58e-27507ac41937
#net my.server.com:/export/tmp
#net user@my.server.com
#sshkey /root/.ssh/kdump_id_rsa
path /var/crash
#core_collector makedumpfile -c
#extra_bins /usr/bin/lftp
#extra_modules gfs2
#default shell

